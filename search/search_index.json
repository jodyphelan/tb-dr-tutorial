{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"TB Drug resistance tutorial","text":""},{"location":"#learing-objectives","title":"Learing objectives","text":"<ul> <li>Asses the quality of raw sequence data</li> <li>Determine the genetic resistance profiles of TB samples using TB-Profiler</li> </ul>"},{"location":"#introduction","title":"Introduction","text":"<p>In this tutorial, we will learn how to assess the quality of raw sequence data and determine the genetic resistance profiles of TB samples using TB-Profiler. We will be analysing data that was generated for a study that aimed to investigate the genetic diversity of TB strains the Phillipines: Whole genome sequencing analysis of Mycobacterium tuberculosis reveals circulating strain types and drug-resistance mutations in the Philippines.</p>"},{"location":"#setting-up-the-environment","title":"Setting up the environment","text":"<p>These tools are written in different programming languages and have different dependencies and require a unix operating system to run. There are several options to set up the environment:     * Install the tools on your local machine     * Use a cloud-based platform such as AWS or Google Cloud to create a virtual machine     * Use a containerisation platform such as Docker or Singularity</p>"},{"location":"#installing-the-tools-on-your-local-machine","title":"Installing the tools on your local machine","text":"<p>Windows</p> <p>This tutorial assumes that you are using a unix operating system. If you are on windows, you will first need to set up wsl on your machine. You can follow the instructions here. Following this, you will have access to a unix terminal and can follow the instructions below.</p> <p>We will be using a conda environment to manage these dependencies. If you don't have conda installed, you can follow the instructions here.</p>"},{"location":"#using-github-codespaces","title":"Using GitHub Codespaces","text":"<p>If you don't want to install the tools on your local machine, you can use GitHub Codespaces to create a cloud-based virtual machine. This will allow you to run the tools in a unix environment without having to install anything on your local machine. You'll need to have a GitHub account to use this service.</p>"},{"location":"#github-codespaces","title":"GitHub Codespaces","text":"<p>GitHub Codespaces is a cloud-based development environment that allows users to run and edit code directly in a virtual machine (VM) hosted by GitHub. It provides a fully configured workspace, pre-installed with necessary tools like Git, Python, and Docker, eliminating the need for users to set up a local environment. Every GitHub user has a certain number of free Codespace hours per month (120 for a free account), making it an ideal solution for doing some occasional bioinformatics. </p>"},{"location":"#visual-studio-code-vs-code","title":"Visual Studio Code (VS Code)","text":"<p>VS Code is a lightweight yet powerful code editor that supports multiple programming languages. It also allows users to connect to GitHub Codespaces, allowing users to work on cloud-based VMs as if they were local files. Users will launch GitHub Codespaces via VS Code, enabling them to interact with their virtual machine through a familiar coding interface.</p>"},{"location":"#how-these-work-together","title":"How These Work Together:","text":"<ol> <li>Users launch GitHub Codespaces to create a cloud-based virtual machine.</li> <li>They connect to the VM using VS Code, accessing the terminal and code files.</li> </ol> <p>This setup allows users to work on cloud-hosted projects with both command-line and GUI access, making it ideal for bioinformatics and data analysis workflows.</p>"},{"location":"#getting-set-up","title":"Getting set up","text":""},{"location":"#1-set-up-a-github-account","title":"1. Set up a GitHub account","text":"<p>Head over to https://github.com/ and sign up for an account. You can skip this step if you already have an account.</p>"},{"location":"#2-download-visual-studio-code","title":"2. Download Visual Studio Code","text":"<p>Get the latest version of vscode from https://code.visualstudio.com/ and follow install instructions from the website.</p>"},{"location":"#4-get-connected","title":"4. Get connected","text":"<p>Once you have installed VScode, you can connect to your GitHub Codespace using the following steps:</p> <ol> <li>Open Visual Studio Code.</li> <li>Install the GitHub Codespaces extension by clicking on the following link and following instructions: GitHub Codespaces.</li> <li>Open the command palette by pressing <code>Ctrl+Shift+P</code> (Windows/Linux) or <code>Cmd+Shift+P</code> (Mac).</li> <li>Type <code>Create new Codespace</code> and select the option.</li> <li>Enter <code>jodyphelan/tb-dr-tutorial</code> in the repository field.</li> <li>You will then be proppted to select a branch. You should select the <code>main</code> branch.</li> <li>You will be asked what type of instance to create. Select <code>4 cores, 16GB RAM, 32 GB storage</code> option.</li> </ol> <p>It should take a few minutes to create the Codespace. Once it's ready, you will be able to access the terminal and files directly from VS Code.</p> <p>You should see something like this:</p> <p></p> <p>If you can't see the terminal, you can open it by clicking on <code>Terminal</code> in the top menu and selecting <code>New Terminal</code>.</p>"},{"location":"#set-up-bioinformatics-software","title":"Set up bioinformatics software","text":"<p>Before we start, we need to set up the environment. We will be using the following tools:</p> <ul> <li>FastQC</li> <li>MultiQC</li> <li>TB-Profiler</li> <li>fastq-dl</li> </ul> <p>We can install these software using a tool called <code>conda</code>. Conda is an open-source package management system and environment management system that runs on Windows, macOS, and Linux. Conda quickly installs, runs, and updates packages and their dependencies. Conda easily creates, saves, loads, and switches between environments on your local computer. It was created for Python programs, but it can package and distribute software for any language.</p> <p>Conda should already be installed in your Codespace. You can check this by running the following command:</p> <pre><code>conda --version\n</code></pre> <p>If you see a version number, then conda is installed. If not, you can install it by following the instructions here. Before we start installing tools, you'll need to initialise conda by running the following command:</p>"},{"location":"#conda-initialisation","title":"Conda initialisation","text":"<p>Before we start installing tools, you'll need to initialise conda by running the following command:</p> <pre><code>conda init\nsource ~/.bashrc\n</code></pre> <p>This will initialise conda to be loaded every time you open a new terminal. Next we need to add software channels so that conda can find the tools we want to install. Channels are the locations where packages are stored. Conda packages are downloaded from remote channels, which are URLs to directories containing conda packages. The bioconda channel contains bioinformatics software and the conda-forge channel contains a wide range of software packages. Use the following command to add the bioconda and conda-forge channels:</p> <pre><code>conda config --add channels bioconda\nconda config --add channels conda-forge\nconda config --set channel_priority strict\n</code></pre> <p>The actions above only need to be done once, so you won't need to run these commands again. </p>"},{"location":"#create-a-new-conda-environment","title":"Create a new conda environment","text":"<p>Conda environments allow you to create isolated environments that have their own set of software installed. This is useful when you have different projects that require different versions of software. We will create a new conda environment called <code>tb</code> and install the required software in this environment. You can create a new conda environment by running the following command:</p> <pre><code>conda create -y -n tb fastqc multiqc tb-profiler fastq-dl\n</code></pre> <p>This step might take a few minutes (once you see <code>\u279c /workspaces/tb-dr-tutorial (main) $</code> again you'll be ready to continue). </p> <p>This command will create a new conda environment called <code>tb</code> and install the required software. You can activate the environment by running the following command:</p> <pre><code>conda activate tb\n</code></pre> <p>You should see <code>(tb)</code> at the beginning of your terminal prompt, indicating that the <code>tb</code> environment is active.</p>"},{"location":"#download-the-data","title":"Download the data","text":"<p>We will be using data from the study Whole genome sequencing analysis of Mycobacterium tuberculosis reveals circulating strain types and drug-resistance mutations in the Philippines. The data is available on the European Nucleotide Archive (ENA) under the accession number PRJEB37886. We will be downloading the data using the <code>fastq-dl</code> tool. You can download the data by running the following command:</p> <pre><code>fastq-dl -o data -a ERR6635398\nfastq-dl -o data -a ERR6635159\nfastq-dl -o data -a ERR6635124\nfastq-dl -o data -a ERR6635248\nfastq-dl -o data -a ERR6635174\nfastq-dl -o data -a ERR6634973\n</code></pre> <p>This will download the raw sequence data for the samples with the accession numbers <code>ERR6635398</code>, <code>ERR6635159</code>, <code>ERR6635124</code>, <code>ERR6635248</code>, <code>ERR6635174</code>, and <code>ERR6634973</code> to a directory called <code>data</code>.</p>"},{"location":"#assess-the-quality-of-the-raw-sequence-data","title":"Assess the quality of the raw sequence data","text":"<p>Before we start analysing the data, it's a good idea to assess the quality of the raw sequence data. We can do this using the <code>fastqc</code> tool. You can run <code>fastqc</code> on the raw sequence data by running the following command:</p> <pre><code>fastqc data/*.fastq.gz\n</code></pre> <p>This will generate a report for each of the raw sequence data files. We will then combine the reports into a single report using the <code>multiqc</code> tool. You can run <code>multiqc</code> on the <code>fastqc</code> reports by running the following command:</p> <pre><code>multiqc .\n</code></pre> <p>This will generate a report called <code>multiqc_report.html</code> that summarises the quality of the raw sequence data. You can open this on a web browser to view the report. Remember, if you are running this on a cloud-based platform, you will need to download the report to view it. You can download it by locating the file in the file explorer on the left-hand side of VS Code, right-clicking on the file, and selecting <code>Download</code>.</p> <p>There are a few things that are important to look out for in the <code>fastqc/multiqc</code> reports, but the one you'll probably want to look at is the per base sequence quality. This shows the quality of the bases at each position in the read. You want to see a high quality score (green) across most positions. It may be normal to see a drop in quality towards the end of the read.</p> <p>[]</p>"},{"location":"#determine-the-genetic-resistance-profiles-of-tb-samples","title":"Determine the genetic resistance profiles of TB samples","text":"<p>Now that we have assessed the quality of the raw sequence data, we can determine the genetic resistance profiles of the TB samples using TB-Profiler. TB-Profiler is a tool that identifies genetic mutations associated with drug resistance in TB samples. You can run TB-Profiler on the raw sequence data by running the following commands:</p> <pre><code>tb-profiler profile -1 data/ERR6635398_1.fastq.gz -2 data/ERR6635398_2.fastq.gz  -p ERR6635398 --snp_dist 100  -t 4 --txt\ntb-profiler profile -1 data/ERR6635159_1.fastq.gz -2 data/ERR6635159_2.fastq.gz  -p ERR6635159 --snp_dist 100  -t 4 --txt\ntb-profiler profile -1 data/ERR6635124_1.fastq.gz -2 data/ERR6635124_2.fastq.gz  -p ERR6635124 --snp_dist 100  -t 4 --txt\ntb-profiler profile -1 data/ERR6635248_1.fastq.gz -2 data/ERR6635248_2.fastq.gz  -p ERR6635248 --snp_dist 100  -t 4 --txt\ntb-profiler profile -1 data/ERR6635174_1.fastq.gz -2 data/ERR6635174_2.fastq.gz  -p ERR6635174 --snp_dist 100  -t 4 --txt\ntb-profiler profile -1 data/ERR6634973_1.fastq.gz -2 data/ERR6634973_2.fastq.gz  -p ERR6634973 --snp_dist 100  -t 4 --txt\n</code></pre> <p>These commands may take a long time to run! This will run TB-Profiler on each of the raw sequence data files and generate a report for each sample. The reports will contain information about the genetic resistance profiles of the samples. You can open the reports in a text editor to view the results. Specific parameters are used to specify the location of the raw sequence data files (<code>-1</code> and <code>-2</code>), the output prefix (<code>-p</code>), the SNP distance to use when performing clustering (<code>--snp_dist</code>), and the number of threads (<code>-t</code>). The <code>--txt</code> option is used to generate a text report.</p> <p>Take a look at one of the reports to see the results. The report will contain information about the genetic resistance profiles of the sample, including the mutations identified and their associated drug resistance. Here we will go through the sections of the report for sample <code>ERR6635398</code>:</p> <pre><code>Summary\n-------\nID: ERR6635398\nDate: 2025-09-18 22:51:00.361166\nStrain: lineage4.3.4.1\nDrug-resistance: Pre-XDR-TB\nMedian Depth: 112.0\n</code></pre> <p>This section contains a summary of the sample, including the sample ID, date of analysis, strain lineage, drug resistance profile, and median depth of coverage.</p> <pre><code>Lineage report\n--------------\nLineage Fraction    Family  Rd\nlineage4    100.000 Euro-American   None\nlineage4.3  100.000 Euro-American (LAM) None\nlineage4.3.4    100.000 Euro-American (LAM) RD174\nlineage4.3.4.1  100.000 Euro-American (LAM) RD174\n</code></pre> <p>This section contains information about the lineage of the sample, including the lineage, the estimated fraction of the lineage and any associated family names. The Lineage system is hierarchical, so you can see the lineage broken down into sub-lineages.</p> <pre><code>Resistance report\n-----------------\nDrug    Genotypic Resistance    Mechanisms\nRifampicin  R   rpoB p.Ser450Leu (1.00)\nIsoniazid   R   katG p.Ser315Thr (1.00)\nEthambutol  R   embB p.Met306Val (1.00)\nPyrazinamide    R   pncA p.Leu172Pro (1.00)\nMoxifloxacin    R   gyrA p.Asp94Asn (1.00)\nLevofloxacin    R   gyrA p.Asp94Asn (1.00)\nBedaquiline     \nDelamanid       \nPretomanid      \nLinezolid       \nStreptomycin    R   rrs n.514A&gt;C (1.00)\nAmikacin    R   rrs n.1401A&gt;G (1.00)\nKanamycin   R   rrs n.1401A&gt;G (1.00)\nCapreomycin R   rrs n.1401A&gt;G (1.00)\nClofazimine     \nEthionamide     \nPara-aminosalicylic_acid        \nCycloserine\n</code></pre> <p>This section contains information about the drug resistance profile of the sample, including the drugs tested for, the genotypic resistance (R = resistant, blank = no resistance identified), and the mutation identified (frequency of mutation in parentheses).</p> <pre><code>Resistance variants report\n-----------------\nGenome Position Locus Tag   Gene Name   Variant Type    Change  Depth   Estimated Fraction  Drug    Confidence  Comment\n7581    Rv0006  gyrA    missense_variant    p.Asp94Asn  58  1.000   moxifloxacin,levofloxacin   Assoc w R   ,High-level resistance\n761155  Rv0667  rpoB    missense_variant    p.Ser450Leu 66  1.000   rifampicin  Assoc w R   \n1472359 EBG00000313325  rrs non_coding_transcript_exon_variant  n.514A&gt;C    82  1.000   streptomycin    Assoc w R   \n1473246 EBG00000313325  rrs non_coding_transcript_exon_variant  n.1401A&gt;G   85  1.000   capreomycin,amikacin,kanamycin  Assoc w R   \n2155168 Rv1908c katG    missense_variant    p.Ser315Thr 111 1.000   isoniazid   Assoc w R   High-level resistance\n2288727 Rv2043c pncA    missense_variant    p.Leu172Pro 55  1.000   pyrazinamide    Assoc w R   \n4247429 Rv3795  embB    missense_variant    p.Met306Val 86  1.000   ethambutol  Assoc w R\n</code></pre> <p>This section contains information about the specific mutations identified in the sample, including the genome position, gene name, type of variant, change, depth of coverage, estimated fraction of the mutation, associated drug, WHO confidence level, and any comments.</p> <pre><code>Other variants report\n---------------------\nGenome Position Locus Tag   Gene Name   Variant Type    Change  Depth   Estimated Fraction  Gene Associated Drug    Confidence  Comment\n7362    Rv0006  gyrA    missense_variant    p.Glu21Gln  77  1.000   moxifloxacin,levofloxacin   Not assoc w R   \n7585    Rv0006  gyrA    missense_variant    p.Ser95Thr  61  1.000   moxifloxacin,levofloxacin   Not assoc w R   \n9304    Rv0006  gyrA    missense_variant    p.Gly668Asp 75  1.000   moxifloxacin,levofloxacin   Not assoc w R   \n576375  Rv0486  mshA    missense_variant    p.Ala343Val 55  1.000   isoniazid,ethionamide   Uncertain significance  \n761496  Rv0667  rpoB    missense_variant    p.Tyr564His 84  0.988   rifampicin  Uncertain significance  \n762506  Rv0667  rpoB    synonymous_variant  c.2700C&gt;T   77  0.974   rifampicin  Not assoc w R - Interim \n764995  Rv0668  rpoC    synonymous_variant  c.1626C&gt;G   114 1.000   rifampicin  Not assoc w R   \n775639  Rv0676c mmpL5   missense_variant    p.Ile948Val 86  1.000   bedaquiline,clofazimine Not assoc w R - Interim,Not assoc w R   \n781395  Rv0682  rpsL    upstream_gene_variant   c.-165T&gt;C   109 1.000   streptomycin    Not assoc w R   \n1364434 Rv1221  sigE    missense_variant    p.Arg8Trp   119 1.000   pyrazinamide    Not assoc w R   \n1471659 EBG00000313325  rrs upstream_gene_variant   n.-187C&gt;T   100 1.000   capreomycin,amikacin,kanamycin,streptomycin Uncertain significance  Not found in WHO catalogue\n1854300 Rv1644  tsnR    missense_variant    p.Leu232Pro 46  1.000   linezolid   Not assoc w R   \n1917972 Rv1694  tlyA    synonymous_variant  c.33A&gt;G 52  1.000   capreomycin Not assoc w R   \n2223293 Rv1979c Rv1979c upstream_gene_variant   c.-129A&gt;G   79  1.000   bedaquiline,clofazimine Not assoc w R - Interim,Not assoc w R   \n2726323 Rv2428  ahpC    missense_variant    p.Pro44Arg  90  1.000   isoniazid   Uncertain significance  \n3073868 Rv2764c thyA    missense_variant    p.Thr202Ala 116 1.000   para-aminosalicylic_acid    Uncertain significance  Not found in WHO catalogue\n3086788 Rv2780  ald upstream_gene_variant   c.-32T&gt;C    172 1.000   cycloserine Uncertain significance  Not found in WHO catalogue\n3339496 Rv2983  fbiD    missense_variant    p.Glu127Gln 56  0.982   delamanid,pretomanid,clofazimine    Uncertain significance  Not found in WHO catalogue\n3612009 Rv3236c Rv3236c missense_variant    p.Ala370Thr 60  1.000   pyrazinamide    Not assoc w R   \n3625065 Rv3245c mtrB    missense_variant    p.Met517Leu 83  1.000   rifampicin,bedaquiline  Uncertain significance,Not assoc w R    \n4038287 Rv3596c clpC1   synonymous_variant  c.2418C&gt;T   78  1.000   pyrazinamide    Not assoc w R   \n4242643 Rv3793  embC    synonymous_variant  c.2781C&gt;T   48  1.000   ethambutol  Not assoc w R   \n4247910 Rv3795  embB    missense_variant    p.Leu466Ser 67  1.000   ethambutol  Uncertain significance  \n4338595 Rv3862c whiB6   upstream_gene_variant   c.-75delG   94  1.000   capreomycin,amikacin,kanamycin  Not assoc w R   \n4338732 Rv3862c whiB6   upstream_gene_variant   c.-211C&gt;T   148 1.000   capreomycin,amikacin,kanamycin  Uncertain significance  Not found in WHO catalogue\n4408156 Rv3919c gid missense_variant    p.Leu16Arg  79  1.000   streptomycin    Not assoc w R\n</code></pre> <p>This section contains information about other mutations identified in the sample that are not associated with drug resistance, including the genome position, gene name, type of variant, change, depth of coverage, estimated fraction of the mutation, associated drug (if any), WHO confidence level, and any comments.</p> <pre><code>QC failed variants report\n-------------------------\n\nGenome Position Locus Tag   Gene Name   Variant Type    Change  Depth   Estimated Fraction  Gene Associated Drug    Confidence  Comment\n576108  Rv0486  mshA    missense_variant    p.Ala254Gly 67  0.209\n</code></pre> <p>This section contains information about mutations that failed the quality control checks. This could be due to low depth of coverage, low estimated fraction or uneven strand support. These mutations should be interpreted with caution as they may represent sequencing artefacts.</p>"},{"location":"#combine-the-reports","title":"Combine the reports","text":"<p>We can then combine the reports into a single report using the <code>collate</code> command:</p> <pre><code>tb-profiler collate --itol\n</code></pre> <p>This will generate a few different files including:</p> <pre><code>* tbprofiler.txt: A tab-delimited file containing the results of the TB-Profiler analysis\n* tbprofiler.variants.csv: A CSV file containing the variants identified by TB-Profiler\n* tbprofiler.transmission_graph.json: A JSON file containing the transmission graph of the samples\n</code></pre> <p>Download these files to view the results. You can open the <code>tbprofiler.txt</code> file in a spreadsheet program such as Excel or Google Sheets to view the results.</p>"},{"location":"#conclusion","title":"Conclusion","text":"<p>In this tutorial, we have learned how to assess the quality of raw sequence data and determine the genetic resistance profiles of TB samples using TB-Profiler. We have also learned how to set up a conda environment and install the required software. You can now use these tools to analyse your own TB sequence data.</p>"}]}